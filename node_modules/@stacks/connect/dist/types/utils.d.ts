import { StacksNetwork as LegacyStacksNetwork } from '@stacks/network-v6';
import { ClarityValue } from '@stacks/transactions';
import { ClarityValue as LegacyClarityValue } from '@stacks/transactions-v6';
import { ConnectNetwork } from './types';
/** @deprecated This will default to the legacy provider. The behavior may be undefined with competing wallets. */
export declare function getStacksProvider(): any;
export declare function isStacksWalletInstalled(): boolean;
/** @internal */
export declare function legacyNetworkFromConnectNetwork(network?: ConnectNetwork): LegacyStacksNetwork;
/** @internal */
export declare function connectNetworkToString(network: ConnectNetwork): string;
/**
 * @internal
 * This may be moved to Stacks.js in the future.
 */
export declare function legacyCVToCV(cv: LegacyClarityValue | ClarityValue): ClarityValue;
/** @internal */
export declare function removeUnserializableKeys<O>(obj: O | {
    onFinish?: Function;
    onCancel?: Function;
}): O;
