import { AddressEntry } from './methods';
export declare const LOCAL_STORAGE_KEY = "@stacks/connect";
export interface StorageData {
    addresses: {
        stx: Omit<AddressEntry, 'publicKey'>[];
        btc: Omit<AddressEntry, 'publicKey'>[];
    };
    updatedAt?: number;
    version: string;
}
/**
 * @internal Helper to deduplicate address entries and strip sensitive data
 */
export declare const normalizeAddresses: (addresses: AddressEntry[]) => Omit<AddressEntry, 'publicKey'>[];
/**
 * @internal Helper to safely store data in localStorage
 */
export declare function setLocalStorageData(data: {
    addresses?: {
        stx?: AddressEntry[];
        btc?: AddressEntry[];
    };
}): void;
/**
 * Clears all stored connect data from localStorage
 */
export declare function clearLocalStorage(): void;
/**
 * Gets the current connect data from localStorage
 */
export declare function getLocalStorage(): StorageData | null;
/** Disconnect selected wallet, clear session data and potentially clear local storage. */
export declare function disconnect(): void;
/**
 * Checks if the user is connected.
 * Aka has successfully connected to a wallet and received an address.
 * This requires the {@link request} method to have been called with `enableLocalStorage: true`.
 */
export declare function isConnected(): boolean;
