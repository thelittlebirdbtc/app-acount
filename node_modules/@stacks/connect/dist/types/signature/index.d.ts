import { MethodParams, MethodResult } from '../methods';
import { StacksProvider } from '../types';
import { CommonSignatureRequestOptions, SignatureData, SignatureRequestOptions } from '../types/signature';
/** @deprecated No-op. Tokens are not needed for latest RPC endpoints. */
export declare function getDefaultSignatureRequestOptions(_options: CommonSignatureRequestOptions): void;
export interface SignatureRequestPayload {
    message: string;
}
/** @deprecated No-op. Tokens are not needed for latest RPC endpoints. */
export declare const signMessage: (_options: SignatureRequestOptions) => Promise<void>;
declare const METHOD: "stx_signMessage";
/** @internal */
export declare const LEGACY_SIGN_MESSAGE_OPTIONS_MAP: (options: SignatureRequestOptions) => MethodParams<typeof METHOD>;
/** @internal */
export declare const LEGACY_SIGN_MESSAGE_RESPONSE_MAP: (response: MethodResult<typeof METHOD>) => SignatureData;
/** Compatible interface with previous Connect `openSignatureRequestPopup` version, but using new SIP-030 RPC method. */
export declare function openSignatureRequestPopup(options: SignatureRequestOptions, provider?: StacksProvider): void;
export {};
